
SMLSHARP = smlsharp
ifeq ($(OS),Windows_NT)
	TARGETS = aobench-smlsharp.exe
else
	TARGETS = aobench-smlsharp aobench-smlsharp-par
endif

VPATH = .:smlnjlib
SMLSHARPFLAGS = -I smlnjlib -O3

## source code
SRCS := \
	random.sml             \
	packword32big.sml      \
	realarray.sml          \
	lib-base.sml           \
	forkjoin.sml           \
	aobench_driver.sml     \
	aobench_driver-par.sml \
	aobench.sml            \
	aobench-mpl.sml

OBJS = $(filter %.o,$(SRCS:.sml=.o))


## default targets
all: $(TARGETS)


##
$(TARGETS): %: $(OBJS)
	$(SMLSHARP) $(SMLSHARPFLAGS) -o $@ $(subst -smlsharp,_driver,$@).smi

## .o type rules
%.o: %.sml
	$(SMLSHARP) $(SMLSHARPFLAGS) -c $<

## generate for SML dependence
%.d: %.sml
	@echo "generate [$@] from [$*]"
	@$(SHELL) -ec '$(SMLSHARP) -MM $(SMLSHARPFLAGS) $< \
		| sed "s/\($*\)\.o[ :]*/\1.o $@ : /g" > $@; \
		[ -s $@ ] || rm -rf $@'

ifeq (,$(findstring $(MAKECMDGOALS),clean))
include $(filter %.d,$(SRCS:.sml=.d))
endif

.PHONY: clean
clean:
	$(RM) $(TARGETS)
	$(RM) $(filter %.d,$(SRCS:.sml=.d))
	$(RM) $(addprefix smlnjlib/,$(OBJS))
	$(RM) $(OBJS)
